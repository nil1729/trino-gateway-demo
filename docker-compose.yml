version: '3.8'

services:
  postgres:
    hostname: postgres
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - trino-net
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -q -d ranger -U ranger']
      interval: 10s
      timeout: 5s
      retries: 3

  trino-gateway:
    build:
      context: trino-gateway
      dockerfile: Dockerfile
    hostname: trino-gateway
    container_name: trino-gateway
    command: /usr/local/bin/docker-entrypoint.sh
    networks:
      trino-net:
        ipv4_address: ${TRINO_GATEWAY_IP}
    ports:
      - 9080:9080
      - 9081:9081
      - 9082:9082
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_HOST: ${POSTGRES_HOST}
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ${PWD}/trino-gateway/gateway-config.yaml:/root/gateway-config.yaml:ro

  trino-cluster-1:
    image: trinodb/trino:433
    hostname: trino-cluster-1
    container_name: trino-cluster-1
    networks:
      trino-net:
        ipv4_address: ${TRINO_CLUSTER_1_IP}
    ports:
      - 8081:8080
    volumes:
      - ${PWD}/trino/config.properties:/etc/trino/config.properties:ro

  trino-cluster-2:
    image: trinodb/trino:433
    hostname: trino-cluster-2
    container_name: trino-cluster-2
    networks:
      trino-net:
        ipv4_address: ${TRINO_CLUSTER_2_IP}
    ports:
      - 8082:8080
    volumes:
      - ${PWD}/trino/config.properties:/etc/trino/config.properties:ro

volumes:
  postgres-data:

networks:
  trino-net:
    ipam:
      driver: default
      config:
        - subnet: ${TRINO_SUBNET}
